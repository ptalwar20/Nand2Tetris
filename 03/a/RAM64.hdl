// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[3..5],a=ram0,b=ram1,c=ram2,d=ram3,e=ram4,f=ram5,g=ram6,h=ram7);
    RAM8(in=in,load=ram0,address=address[0..2],out=rOut0);
    RAM8(in=in,load=ram1,address=address[0..2],out=rOut1);
    RAM8(in=in,load=ram2,address=address[0..2],out=rOut2);
    RAM8(in=in,load=ram3,address=address[0..2],out=rOut3);
    RAM8(in=in,load=ram4,address=address[0..2],out=rOut4);
    RAM8(in=in,load=ram5,address=address[0..2],out=rOut5);
    RAM8(in=in,load=ram6,address=address[0..2],out=rOut6);
    RAM8(in=in,load=ram7,address=address[0..2],out=rOut7);
    Mux8Way16(a=rOut0,b=rOut1,c=rOut2,d=rOut3,e=rOut4,f=rOut5,g=rOut6,h=rOut7,sel=address[3..5],out=out);
}